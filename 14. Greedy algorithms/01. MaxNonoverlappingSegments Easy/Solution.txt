1st > 100%

using System;
// you can also use other imports, for example:
// using System.Collections.Generic;

// you can write to stdout for debugging purposes, e.g.
// Console.WriteLine("this is a debug message");

class Solution {
    public int solution(int[] A, int[] B) {
        int N = A.Length;
        int maxNumOfSegments = 0;
        int prevB = -1;
        
        /*
        NOTE: We need to count small segments as they will give us maximum number of non overlapping segments.
              This simple solution works because segments are sorted by their end so smaller segments
              are located in array before larger segments (they are contained within larger segments).
              Test case: ([1, 2, 3, 1, 5], [1, 2, 3, 4, 5]) returns 4 which is correct.
        */
        
        for(int i = 0; i < N; i++)
        {
            if(A[i] > prevB)
            {
                maxNumOfSegments++;
                prevB = B[i];
            }
        }
                
        return maxNumOfSegments;
    }
}