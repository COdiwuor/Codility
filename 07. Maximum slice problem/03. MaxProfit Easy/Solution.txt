2nd > 100%, rewrote the loop to go from last to first element and substract current element from maximum element up to current index

using System;
using System.Linq;
// you can also use other imports, for example:
// using System.Collections.Generic;

// you can write to stdout for debugging purposes, e.g.
// Console.WriteLine("this is a debug message");

class Solution {
    public int solution(int[] A) {
        int N = A.Length;
        int maxProfit = 0;
        
        if(N > 1)
        {
            int minPrice = 200000;
            int maxPrice = 0;
            
            for(int i = N - 1; i > 0-1; i--)
            {
                maxPrice = Math.Max(maxPrice, A[i]);
                minPrice = A[i];
                maxProfit = Math.Max(maxProfit, maxPrice - minPrice);
            }
        }
        
        return maxProfit;
    }
}


1st > 77%, error on input [8, 9, 3, 6, 1, 2], got 1, expected 3

using System;
using System.Linq;
// you can also use other imports, for example:
// using System.Collections.Generic;

// you can write to stdout for debugging purposes, e.g.
// Console.WriteLine("this is a debug message");

class Solution {
    public int solution(int[] A) {
        int N = A.Length;
        int maxProfit = 0;
        
        if(N > 1)
        {
            int minPrice = 200000;
            int minPriceIndex = 0;
            int maxPrice = 0;
            
            for(int i = 0; i < N; i++)
            {
                if(A[i] < minPrice)
                {
                    minPrice = A[i];
                    minPriceIndex = i;
                }
            }
            
            for(int i = minPriceIndex; i < N; i++)
            {
                if(A[i] > maxPrice)
                {
                    maxPrice = A[i];
                }
            }
            
            maxProfit = maxPrice - minPrice;
        }
        
        return maxProfit;
    }
}